%!PS-Adobe-2.0 EPSF-2.0
%%Title: 02-03.22-27_youtube_tmobile_1min_can_lab_sample.txt.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue Feb  4 11:02:41 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (02-03.22-27_youtube_tmobile_1min_can_lab_sample.txt.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (teamwork523)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Feb  4 11:02:41 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 180 scalefont setfont
1.000 UL
LTb
2322 3384 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(PCH) Rshow
1.000 UL
LTb
2322 3672 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(PCH/FACH Transition) Rshow
1.000 UL
LTb
2322 3959 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(FACH) Rshow
1.000 UL
LTb
2322 4247 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(FACH/DCH Transition) Rshow
1.000 UL
LTb
2322 4535 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(DCH) Rshow
1.000 UL
LTb
2452 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
(-0.2) Cshow
1.000 UL
LTb
2972 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 0) Cshow
1.000 UL
LTb
3493 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 0.2) Cshow
1.000 UL
LTb
4013 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 0.4) Cshow
1.000 UL
LTb
4533 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 0.6) Cshow
1.000 UL
LTb
5054 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 0.8) Cshow
1.000 UL
LTb
5574 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 1) Cshow
1.000 UL
LTb
6094 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 1.2) Cshow
1.000 UL
LTb
6615 3096 M
0 63 V
0 1664 R
0 -63 V
0 -1844 R
( 1.4) Cshow
1.000 UL
LTb
1.000 UL
LTb
2322 4823 N
0 -1727 V
4553 0 V
0 1727 V
-4553 0 V
Z stroke
LCb setrgbcolor
4598 2646 M
(Time \(s\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
3811 4580 N
0 180 V
1574 0 V
0 -180 V
-1574 0 V
Z stroke
3811 4760 M
1574 0 V
% Begin plot #1
1.000 UP
stroke
2.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
/Arial findfont 140 scalefont setfont
4675 4670 M
(IP packets) Rshow
/Arial findfont 180 scalefont setfont
LT0
1.00 0.00 0.00 C 4783 4670 M
495 0 V
3165 4535 M
208 0 V
29 0 V
2 0 V
8 0 V
3 0 V
28 0 V
130 0 V
131 0 V
36 0 V
8 0 V
5 0 V
107 0 V
192 0 V
8 0 V
3 0 V
2 0 V
159 -288 V
26 0 V
44 0 V
5 0 V
29 0 V
86 0 V
70 0 V
36 0 V
8 0 V
68 0 V
3 0 V
39 0 V
62 0 V
18 0 V
8 0 V
107 0 V
2 0 V
47 0 V
5 0 V
5 0 V
8 0 V
130 0 V
8 0 V
3 0 V
23 0 V
26 0 V
123 0 V
7 0 V
3 0 V
23 0 V
3 0 V
8 0 V
5 0 V
91 0 V
49 0 V
3 0 V
8 0 V
5 0 V
3 0 V
7 0 V
3 0 V
10 0 V
118 0 V
2 0 V
52 0 V
3 0 V
5 0 V
3 0 V
91 0 V
2 0 V
8 0 V
8 0 V
26 0 V
5 0 V
55 0 V
2 0 V
11 0 V
2 0 V
3 0 V
5 0 V
151 0 V
36 0 V
11 0 V
2 0 V
3 0 V
3165 4535 Box
3373 4535 Box
3373 4535 Box
3402 4535 Box
3404 4535 Box
3404 4535 Box
3412 4535 Box
3415 4535 Box
3443 4535 Box
3443 4535 Box
3443 4535 Box
3573 4535 Box
3704 4535 Box
3740 4535 Box
3740 4535 Box
3740 4535 Box
3748 4535 Box
3753 4535 Box
3753 4535 Box
3753 4535 Box
3753 4535 Box
3860 4535 Box
4052 4535 Box
4052 4535 Box
4060 4535 Box
4060 4535 Box
4063 4535 Box
4063 4535 Box
4063 4535 Box
4063 4535 Box
4065 4535 Box
4065 4535 Box
4224 4247 Box
4224 4247 Box
4250 4247 Box
4294 4247 Box
4294 4247 Box
4294 4247 Box
4299 4247 Box
4299 4247 Box
4299 4247 Box
4299 4247 Box
4328 4247 Box
4414 4247 Box
4484 4247 Box
4520 4247 Box
4520 4247 Box
4520 4247 Box
4528 4247 Box
4528 4247 Box
4596 4247 Box
4599 4247 Box
4599 4247 Box
4638 4247 Box
4638 4247 Box
4638 4247 Box
4700 4247 Box
4700 4247 Box
4718 4247 Box
4718 4247 Box
4726 4247 Box
4726 4247 Box
4833 4247 Box
4833 4247 Box
4833 4247 Box
4835 4247 Box
4882 4247 Box
4887 4247 Box
4887 4247 Box
4892 4247 Box
4900 4247 Box
4900 4247 Box
5030 4247 Box
5038 4247 Box
5038 4247 Box
5038 4247 Box
5041 4247 Box
5041 4247 Box
5064 4247 Box
5064 4247 Box
5090 4247 Box
5213 4247 Box
5220 4247 Box
5220 4247 Box
5220 4247 Box
5223 4247 Box
5223 4247 Box
5246 4247 Box
5249 4247 Box
5249 4247 Box
5257 4247 Box
5262 4247 Box
5262 4247 Box
5353 4247 Box
5402 4247 Box
5405 4247 Box
5405 4247 Box
5413 4247 Box
5418 4247 Box
5421 4247 Box
5428 4247 Box
5431 4247 Box
5441 4247 Box
5559 4247 Box
5561 4247 Box
5613 4247 Box
5613 4247 Box
5613 4247 Box
5616 4247 Box
5616 4247 Box
5621 4247 Box
5624 4247 Box
5715 4247 Box
5717 4247 Box
5717 4247 Box
5725 4247 Box
5733 4247 Box
5759 4247 Box
5764 4247 Box
5819 4247 Box
5819 4247 Box
5821 4247 Box
5832 4247 Box
5834 4247 Box
5834 4247 Box
5837 4247 Box
5842 4247 Box
5993 4247 Box
6029 4247 Box
6029 4247 Box
6040 4247 Box
6042 4247 Box
6042 4247 Box
6045 4247 Box
5030 4670 Box
% End plot #1
1.000 UL
LTb
2322 4823 N
0 -1727 V
4553 0 V
0 1727 V
-4553 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2322 864 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(PCH) Rshow
1.000 UL
LTb
2322 1152 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(PCH/FACH Transition) Rshow
1.000 UL
LTb
2322 1440 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(FACH) Rshow
1.000 UL
LTb
2322 1728 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(FACH/DCH Transition) Rshow
1.000 UL
LTb
2322 2016 M
63 0 V
4490 0 R
-63 0 V
-4598 0 R
(DCH) Rshow
1.000 UL
LTb
2452 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
(-0.2) Cshow
1.000 UL
LTb
2972 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 0) Cshow
1.000 UL
LTb
3493 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 0.2) Cshow
1.000 UL
LTb
4013 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 0.4) Cshow
1.000 UL
LTb
4533 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 0.6) Cshow
1.000 UL
LTb
5054 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 0.8) Cshow
1.000 UL
LTb
5574 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 1) Cshow
1.000 UL
LTb
6094 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 1.2) Cshow
1.000 UL
LTb
6615 576 M
0 63 V
0 1665 R
0 -63 V
0 -1845 R
( 1.4) Cshow
1.000 UL
LTb
1.000 UL
LTb
2322 2304 N
0 -1728 V
4553 0 V
0 1728 V
-4553 0 V
Z stroke
LCb setrgbcolor
4598 126 M
(Time \(s\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
4436 639 N
0 540 V
2331 0 V
0 -540 V
-2331 0 V
Z stroke
4436 1179 M
2331 0 V
% Begin plot #1
1.000 UP
stroke
LT0
0.00 0.00 1.00 C LCb setrgbcolor
/Arial findfont 120 scalefont setfont
6056 1089 M
(FACH_to_DCH Begin) Rshow
/Arial findfont 180 scalefont setfont
LT0
0.00 0.00 1.00 C 4206 1728 Pls
6411 1089 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
1.00 0.00 0.00 C LCb setrgbcolor
/Arial findfont 120 scalefont setfont
6056 909 M
(FACH_to_DCH End) Rshow
/Arial findfont 180 scalefont setfont
LT1
1.00 0.00 0.00 C 6053 1728 Crs
6411 909 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
1.00 0.65 0.00 C LCb setrgbcolor
/Arial findfont 120 scalefont setfont
6056 729 M
(RLC PDUs) Rshow
/Arial findfont 180 scalefont setfont
LT2
1.00 0.65 0.00 C 3178 2016 TriUF
3370 2016 TriUF
3370 2016 TriUF
3370 2016 TriUF
3402 2016 TriUF
3402 2016 TriUF
3402 2016 TriUF
3412 2016 TriUF
3412 2016 TriUF
3443 2016 TriUF
3443 2016 TriUF
3571 2016 TriUF
3704 2016 TriUF
3704 2016 TriUF
3740 2016 TriUF
3740 2016 TriUF
3740 2016 TriUF
3748 2016 TriUF
3753 2016 TriUF
3753 2016 TriUF
3753 2016 TriUF
3860 2016 TriUF
4052 2016 TriUF
4052 2016 TriUF
4052 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4060 2016 TriUF
4224 2016 TriUF
4224 2016 TriUF
4250 2016 TriUF
4250 2016 TriUF
4294 2016 TriUF
4294 2016 TriUF
4294 2016 TriUF
4299 2016 TriUF
4299 2016 TriUF
4299 2016 TriUF
4328 2016 TriUF
4406 2016 TriUF
4484 2016 TriUF
4484 2016 TriUF
4520 2016 TriUF
4520 2016 TriUF
4520 2016 TriUF
4528 2016 TriUF
4588 2016 TriUF
4596 2016 TriUF
4599 2016 TriUF
4599 2016 TriUF
4638 2016 TriUF
4638 2016 TriUF
4700 2016 TriUF
4700 2016 TriUF
4718 2016 TriUF
4718 2016 TriUF
4718 2016 TriUF
4726 2016 TriUF
4794 2016 TriUF
4833 2016 TriUF
4833 2016 TriUF
4833 2016 TriUF
4874 2016 TriUF
4879 2016 TriUF
4887 2016 TriUF
4887 2016 TriUF
4900 2016 TriUF
4900 2016 TriUF
5030 2016 TriUF
5030 2016 TriUF
5038 2016 TriUF
5038 2016 TriUF
5038 2016 TriUF
5041 2016 TriUF
5056 2016 TriUF
5064 2016 TriUF
5080 2016 TriUF
5213 2016 TriUF
5213 2016 TriUF
5220 2016 TriUF
5220 2016 TriUF
5220 2016 TriUF
5220 2016 TriUF
5236 2016 TriUF
5244 2016 TriUF
5249 2016 TriUF
5249 2016 TriUF
5257 2016 TriUF
5262 2016 TriUF
5353 2016 TriUF
5392 2016 TriUF
5402 2016 TriUF
5405 2016 TriUF
5405 2016 TriUF
5413 2016 TriUF
5415 2016 TriUF
5421 2016 TriUF
5428 2016 TriUF
5431 2016 TriUF
5548 2016 TriUF
5556 2016 TriUF
5608 2016 TriUF
5613 2016 TriUF
5613 2016 TriUF
5613 2016 TriUF
5613 2016 TriUF
5613 2016 TriUF
5616 2016 TriUF
5704 2016 TriUF
5715 2016 TriUF
5717 2016 TriUF
5717 2016 TriUF
5725 2016 TriUF
5733 2016 TriUF
5759 2016 TriUF
5808 2016 TriUF
5819 2016 TriUF
5819 2016 TriUF
5821 2016 TriUF
5832 2016 TriUF
5832 2016 TriUF
5834 2016 TriUF
5834 2016 TriUF
5988 2016 TriUF
5993 2016 TriUF
6029 2016 TriUF
6029 2016 TriUF
6037 2016 TriUF
6042 2016 TriUF
6042 2016 TriUF
6411 729 TriUF
% End plot #3
1.000 UL
LTb
2322 2304 N
0 -1728 V
4553 0 V
0 1728 V
-4553 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial
